#+STARTUP: overview
#+STARTUP: hideblocks

* Overview
  Micro is a microservice ecosystem simplifying distributed development. It provides
  the fundamental building blocks for developing distributed applications. Compared
  to go-kit, micro has a broader view: it is described as a platform than a toolkip
  library, think of it as Spring Cloud for Go (or Cloud Native).
* Components
** Go-micro
   A pluggable RPC framework for Go. Following components, i.e. API, web, cli,
   bot and sidecar are all located at https://github.com/micro/micro, and use
   go-micro internally to implement their feature.
   https://github.com/micro/go-micro
** API
   An API Gateway. A single HTTP entry point. Dynamically routing HTTP requests to
   RPC services.
   https://github.com/micro/micro/tree/master/api
** Web
   A UI and Web Gateway. Build your web apps as micro services.
   https://github.com/micro/micro/tree/master/web
   https://github.com/micro/go-web
** CLI
   A command line interface. Interact with your micro services.
   https://github.com/micro/micro/tree/master/cli
** Bot
   A bot for slack and hipchat. CLI equivalent via messaging.
   https://github.com/micro/micro/tree/master/bot
** Sidecar
   A go-micro proxy. All the features of go-micro over HTTP. The micro sidecar
   builds on go-micro with the same defaults and pluggability.
   https://github.com/micro/micro/tree/master/car
* Features
** Service Discovery
   Automatic service registration and name resolution. All services written in micro
   has built-in service discovery, which by default depends on consul.
** Load Balancing
   Client side load balancing built on discovery.
** Sync Comms
   RPC based communication with support for bidirectional streaming.
** Async Comms
   Native PubSub messaging built in for event driven architectures. By default, it
   uses consul for messaging (same instance as service discovery).
** Message Encoding
   Dynamic encoding based on content-type with protobuf and json out of the box.
** Service Interface
   All features are wrapped up in a simple high level interface.
* Experiments
  https://github.com/micro/examples/tree/master/greeter
  Note: run consul with:
    docker run --net=host -d consul:1.0.6
  List consul services with:
    docker run --net=host consul:1.0.6 consul catalog services
* References
  https://micro.mu/blog/2016/03/20/micro.html
  https://micro.mu/blog/2016/04/18/micro-architecture.html
  https://micro.mu/blog/2016/12/28/micro-past-present-future.html
  https://micro.mu/docs/index.html
  https://micro.mu/docs/architecture.html
